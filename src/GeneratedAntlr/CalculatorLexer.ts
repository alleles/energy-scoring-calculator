// Generated from ./src/Calculator.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class CalculatorLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly NUMBER = 10;
	public static readonly FLOAT = 11;
	public static readonly DIGIT = 12;
	public static readonly MOD = 13;
	public static readonly WHOLE = 14;
	public static readonly MUL = 15;
	public static readonly DIV = 16;
	public static readonly ADD = 17;
	public static readonly SUB = 18;
	public static readonly PI = 19;
	public static readonly EXPONENT = 20;
	public static readonly NEGEXPONENT = 21;
	public static readonly EULER = 22;
	public static readonly SQRT = 23;
	public static readonly SQR = 24;
	public static readonly FLOOR = 25;
	public static readonly CEIL = 26;
	public static readonly ABS = 27;
	public static readonly ROUNDK = 28;
	public static readonly ROUND = 29;
	public static readonly TRUNC = 30;
	public static readonly SIN = 31;
	public static readonly COS = 32;
	public static readonly TAN = 33;
	public static readonly COT = 34;
	public static readonly SINH = 35;
	public static readonly COSH = 36;
	public static readonly TANH = 37;
	public static readonly ARCSIN = 38;
	public static readonly ARCCOS = 39;
	public static readonly ARCTAN = 40;
	public static readonly ARCTAN2 = 41;
	public static readonly ARCCOT = 42;
	public static readonly EXP = 43;
	public static readonly LN = 44;
	public static readonly EEX = 45;
	public static readonly LOG = 46;
	public static readonly RAD = 47;
	public static readonly DEG = 48;
	public static readonly MIN = 49;
	public static readonly MAX = 50;
	public static readonly WS = 51;
	public static readonly COM = 52;
	public static readonly SUBSTITUTION = 53;
	public static readonly SEMICOLON = 54;
	public static readonly INVALID = 55;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"NUMBER", "FLOAT", "DIGIT", "MOD", "WHOLE", "MUL", "DIV", "ADD", "SUB", 
		"PI", "EXPONENT", "NEGEXPONENT", "EULER", "SQRT", "SQR", "FLOOR", "CEIL", 
		"ABS", "ROUNDK", "ROUND", "TRUNC", "SIN", "COS", "TAN", "COT", "SINH", 
		"COSH", "TANH", "ARCSIN", "ARCCOS", "ARCTAN", "ARCTAN2", "ARCCOT", "EXP", 
		"LN", "EEX", "LOG", "RAD", "DEG", "MIN", "MAX", "WS", "COM", "SUBSTITUTION", 
		"SEMICOLON", "INVALID", "COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'='", "'('", "')'", "'^'", "'**'", "'%'", "'~'", "'//'", "'()'", 
		undefined, undefined, undefined, undefined, undefined, "'*'", "'/'", "'+'", 
		"'-'", undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "';'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "NUMBER", "FLOAT", "DIGIT", "MOD", "WHOLE", 
		"MUL", "DIV", "ADD", "SUB", "PI", "EXPONENT", "NEGEXPONENT", "EULER", 
		"SQRT", "SQR", "FLOOR", "CEIL", "ABS", "ROUNDK", "ROUND", "TRUNC", "SIN", 
		"COS", "TAN", "COT", "SINH", "COSH", "TANH", "ARCSIN", "ARCCOS", "ARCTAN", 
		"ARCTAN2", "ARCCOT", "EXP", "LN", "EEX", "LOG", "RAD", "DEG", "MIN", "MAX", 
		"WS", "COM", "SUBSTITUTION", "SEMICOLON", "INVALID",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(CalculatorLexer._LITERAL_NAMES, CalculatorLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return CalculatorLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(CalculatorLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Calculator.g4"; }

	// @Override
	public get ruleNames(): string[] { return CalculatorLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return CalculatorLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return CalculatorLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return CalculatorLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x029\u017D\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x03\x02\x03\x02\x03\x03\x03" +
		"\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x07\x03" +
		"\x07\x03\b\x03\b\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\v\x03\v\x06\v" +
		"\x8B\n\v\r\v\x0E\v\x8C\x05\v\x8F\n\v\x03\f\x06\f\x92\n\f\r\f\x0E\f\x93" +
		"\x03\f\x03\f\x07\f\x98\n\f\f\f\x0E\f\x9B\v\f\x03\f\x03\f\x06\f\x9F\n\f" +
		"\r\f\x0E\f\xA0\x05\f\xA3\n\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12" +
		"\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15" +
		"\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C" +
		"\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F" +
		"\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03\"" +
		"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x03$\x03$\x03%\x03" +
		"%\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03\'\x03" +
		"\'\x03\'\x03\'\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03)" +
		"\x03)\x03)\x03)\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03+\x03+\x03" +
		"+\x03+\x03+\x03+\x03+\x03,\x03,\x03,\x03,\x03-\x03-\x03-\x03.\x03.\x03" +
		".\x03.\x03/\x03/\x03/\x03/\x030\x030\x030\x030\x031\x031\x031\x031\x03" +
		"2\x032\x032\x032\x033\x033\x033\x033\x034\x034\x034\x034\x035\x035\x03" +
		"5\x035\x036\x036\x066\u0159\n6\r6\x0E6\u015A\x037\x037\x038\x038\x039" +
		"\x039\x039\x039\x079\u0165\n9\f9\x0E9\u0168\v9\x039\x039\x039\x039\x07" +
		"9\u016E\n9\f9\x0E9\u0171\v9\x039\x039\x039\x079\u0176\n9\f9\x0E9\u0179" +
		"\v9\x039\x059\u017C\n9\x05\u0166\u016F\u0177\x02\x02:\x03\x02\x03\x05" +
		"\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13" +
		"\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02" +
		"\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/" +
		"\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?" +
		"\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02" +
		",W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x024g\x025i\x026k\x027m\x02" +
		"8o\x029q\x02\x02\x03\x02\x1D\x04\x02..00\x03\x022;\x04\x02OOoo\x04\x02" +
		"QQqq\x04\x02FFff\x04\x02KKkk\x04\x02XXxx\x04\x02RRrr\x04\x02GGgg\x04\x02" +
		"UUuu\x04\x02SSss\x04\x02TTtt\x04\x02VVvv\x04\x02HHhh\x04\x02NNnn\x04\x02" +
		"EEee\x04\x02CCcc\x04\x02DDdd\x04\x02WWww\x04\x02PPpp\x04\x02MMmm\x04\x02" +
		"JJjj\x03\x0244\x04\x02ZZzz\x04\x02IIii\x05\x02\v\f\x0F\x0F\"\"\v\x022" +
		";C\\c|\xC6\xC6\xD8\xD8\xDE\xDE\xE6\xE6\xF8\xF8\xFE\xFE\x02\u0187\x02\x03" +
		"\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t" +
		"\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03" +
		"\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03" +
		"\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03" +
		"\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03" +
		"\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02" +
		"\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02" +
		"/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02" +
		"\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02" +
		"\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03" +
		"\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02" +
		"\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02" +
		"Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02" +
		"\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02" +
		"\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03" +
		"\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02" +
		"\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x03s\x03\x02\x02\x02\x05" +
		"u\x03\x02\x02\x02\x07w\x03\x02\x02\x02\ty\x03\x02\x02\x02\v{\x03\x02\x02" +
		"\x02\r~\x03\x02\x02\x02\x0F\x80\x03\x02\x02\x02\x11\x82\x03\x02\x02\x02" +
		"\x13\x85\x03\x02\x02\x02\x15\x8E\x03\x02\x02\x02\x17\xA2\x03\x02\x02\x02" +
		"\x19\xA4\x03\x02\x02\x02\x1B\xA6\x03\x02\x02\x02\x1D\xAA\x03\x02\x02\x02" +
		"\x1F\xAE\x03\x02\x02\x02!\xB0\x03\x02\x02\x02#\xB2\x03\x02\x02\x02%\xB4" +
		"\x03\x02\x02\x02\'\xB6\x03\x02\x02\x02)\xB9\x03\x02\x02\x02+\xBC\x03\x02" +
		"\x02\x02-\xBF\x03\x02\x02\x02/\xC1\x03\x02\x02\x021\xC6\x03\x02\x02\x02" +
		"3\xCA\x03\x02\x02\x025\xD0\x03\x02\x02\x027\xD5\x03\x02\x02\x029\xD9\x03" +
		"\x02\x02\x02;\xE0\x03\x02\x02\x02=\xE6\x03\x02\x02\x02?\xEC\x03\x02\x02" +
		"\x02A\xF0\x03\x02\x02\x02C\xF4\x03\x02\x02\x02E\xF8\x03\x02\x02\x02G\xFC" +
		"\x03\x02\x02\x02I\u0101\x03\x02\x02\x02K\u0106\x03\x02\x02\x02M\u010B" +
		"\x03\x02\x02\x02O\u0112\x03\x02\x02\x02Q\u0119\x03\x02\x02\x02S\u0120" +
		"\x03\x02\x02\x02U\u0128\x03\x02\x02\x02W\u012F\x03\x02\x02\x02Y\u0133" +
		"\x03\x02\x02\x02[\u0136\x03\x02\x02\x02]\u013A\x03\x02\x02\x02_\u013E" +
		"\x03\x02\x02\x02a\u0142\x03\x02\x02\x02c\u0146\x03\x02\x02\x02e\u014A" +
		"\x03\x02\x02\x02g\u014E\x03\x02\x02\x02i\u0152\x03\x02\x02\x02k\u0156" +
		"\x03\x02\x02\x02m\u015C\x03\x02\x02\x02o\u015E\x03\x02\x02\x02q\u017B" +
		"\x03\x02\x02\x02st\x07?\x02\x02t\x04\x03\x02\x02\x02uv\x07*\x02\x02v\x06" +
		"\x03\x02\x02\x02wx\x07+\x02\x02x\b\x03\x02\x02\x02yz\x07`\x02\x02z\n\x03" +
		"\x02\x02\x02{|\x07,\x02\x02|}\x07,\x02\x02}\f\x03\x02\x02\x02~\x7F\x07" +
		"\'\x02\x02\x7F\x0E\x03\x02\x02\x02\x80\x81\x07\x80\x02\x02\x81\x10\x03" +
		"\x02\x02\x02\x82\x83\x071\x02\x02\x83\x84\x071\x02\x02\x84\x12\x03\x02" +
		"\x02\x02\x85\x86\x07*\x02\x02\x86\x87\x07+\x02\x02\x87\x14\x03\x02\x02" +
		"\x02\x88\x8F\x05\x17\f\x02\x89\x8B\x05\x19\r\x02\x8A\x89\x03\x02\x02\x02" +
		"\x8B\x8C\x03\x02\x02\x02\x8C\x8A\x03\x02\x02\x02\x8C\x8D\x03\x02\x02\x02" +
		"\x8D\x8F\x03\x02\x02\x02\x8E\x88\x03\x02\x02\x02\x8E\x8A\x03\x02\x02\x02" +
		"\x8F\x16\x03\x02\x02\x02\x90\x92\x05\x19\r\x02\x91\x90\x03\x02\x02\x02" +
		"\x92\x93\x03\x02\x02\x02\x93\x91\x03\x02\x02\x02\x93\x94\x03\x02\x02\x02" +
		"\x94\x95\x03\x02\x02\x02\x95\x99\t\x02\x02\x02\x96\x98\x05\x19\r\x02\x97" +
		"\x96\x03\x02\x02\x02\x98\x9B\x03\x02\x02\x02\x99\x97\x03\x02\x02\x02\x99" +
		"\x9A\x03\x02\x02\x02\x9A\xA3\x03\x02\x02\x02\x9B\x99\x03\x02\x02\x02\x9C" +
		"\x9E\t\x02\x02\x02\x9D\x9F\x05\x19\r\x02\x9E\x9D\x03\x02\x02\x02\x9F\xA0" +
		"\x03\x02\x02\x02\xA0\x9E\x03\x02\x02\x02\xA0\xA1\x03\x02\x02\x02\xA1\xA3" +
		"\x03\x02\x02\x02\xA2\x91\x03\x02\x02\x02\xA2\x9C\x03\x02\x02\x02\xA3\x18" +
		"\x03\x02\x02\x02\xA4\xA5\t\x03\x02\x02\xA5\x1A\x03\x02\x02\x02\xA6\xA7" +
		"\t\x04\x02\x02\xA7\xA8\t\x05\x02\x02\xA8\xA9\t\x06\x02\x02\xA9\x1C\x03" +
		"\x02\x02\x02\xAA\xAB\t\x06\x02\x02\xAB\xAC\t\x07\x02\x02\xAC\xAD\t\b\x02" +
		"\x02\xAD\x1E\x03\x02\x02\x02\xAE\xAF\x07,\x02\x02\xAF \x03\x02\x02\x02" +
		"\xB0\xB1\x071\x02\x02\xB1\"\x03\x02\x02\x02\xB2\xB3\x07-\x02\x02\xB3$" +
		"\x03\x02\x02\x02\xB4\xB5\x07/\x02\x02\xB5&\x03\x02\x02\x02\xB6\xB7\t\t" +
		"\x02\x02\xB7\xB8\t\x07\x02\x02\xB8(\x03\x02\x02\x02\xB9\xBA\t\n\x02\x02" +
		"\xBA\xBB\x07-\x02\x02\xBB*\x03\x02\x02\x02\xBC\xBD\t\n\x02\x02\xBD\xBE" +
		"\x07/\x02\x02\xBE,\x03\x02\x02\x02\xBF\xC0\t\n\x02\x02\xC0.\x03\x02\x02" +
		"\x02\xC1\xC2\t\v\x02\x02\xC2\xC3\t\f\x02\x02\xC3\xC4\t\r\x02\x02\xC4\xC5" +
		"\t\x0E\x02\x02\xC50\x03\x02\x02\x02\xC6\xC7\t\v\x02\x02\xC7\xC8\t\f\x02" +
		"\x02\xC8\xC9\t\r\x02\x02\xC92\x03\x02\x02\x02\xCA\xCB\t\x0F\x02\x02\xCB" +
		"\xCC\t\x10\x02\x02\xCC\xCD\t\x05\x02\x02\xCD\xCE\t\x05\x02\x02\xCE\xCF" +
		"\t\r\x02\x02\xCF4\x03\x02\x02\x02\xD0\xD1\t\x11\x02\x02\xD1\xD2\t\n\x02" +
		"\x02\xD2\xD3\t\x07\x02\x02\xD3\xD4\t\x10\x02\x02\xD46\x03\x02\x02\x02" +
		"\xD5\xD6\t\x12\x02\x02\xD6\xD7\t\x13\x02\x02\xD7\xD8\t\v\x02\x02\xD88" +
		"\x03\x02\x02\x02\xD9\xDA\t\r\x02\x02\xDA\xDB\t\x05\x02\x02\xDB\xDC\t\x14" +
		"\x02\x02\xDC\xDD\t\x15\x02\x02\xDD\xDE\t\x06\x02\x02\xDE\xDF\t\x16\x02" +
		"\x02\xDF:\x03\x02\x02\x02\xE0\xE1\t\r\x02\x02\xE1\xE2\t\x05\x02\x02\xE2" +
		"\xE3\t\x14\x02\x02\xE3\xE4\t\x15\x02\x02\xE4\xE5\t\x06\x02\x02\xE5<\x03" +
		"\x02\x02\x02\xE6\xE7\t\x0E\x02\x02\xE7\xE8\t\r\x02\x02\xE8\xE9\t\x14\x02" +
		"\x02\xE9\xEA\t\x15\x02\x02\xEA\xEB\t\x11\x02\x02\xEB>\x03\x02\x02\x02" +
		"\xEC\xED\t\v\x02\x02\xED\xEE\t\x07\x02\x02\xEE\xEF\t\x15\x02\x02\xEF@" +
		"\x03\x02\x02\x02\xF0\xF1\t\x11\x02\x02\xF1\xF2\t\x05\x02\x02\xF2\xF3\t" +
		"\v\x02\x02\xF3B\x03\x02\x02\x02\xF4\xF5\t\x0E\x02\x02\xF5\xF6\t\x12\x02" +
		"\x02\xF6\xF7\t\x15\x02\x02\xF7D\x03\x02\x02\x02\xF8\xF9\t\x11\x02\x02" +
		"\xF9\xFA\t\x05\x02\x02\xFA\xFB\t\x0E\x02\x02\xFBF\x03\x02\x02\x02\xFC" +
		"\xFD\t\v\x02\x02\xFD\xFE\t\x07\x02\x02\xFE\xFF\t\x15\x02\x02\xFF\u0100" +
		"\t\x17\x02\x02\u0100H\x03\x02\x02\x02\u0101\u0102\t\x11\x02\x02\u0102" +
		"\u0103\t\x05\x02\x02\u0103\u0104\t\v\x02\x02\u0104\u0105\t\x17\x02\x02" +
		"\u0105J\x03\x02\x02\x02\u0106\u0107\t\x0E\x02\x02\u0107\u0108\t\x12\x02" +
		"\x02\u0108\u0109\t\x15\x02\x02\u0109\u010A\t\x17\x02\x02\u010AL\x03\x02" +
		"\x02\x02\u010B\u010C\t\x12\x02\x02\u010C\u010D\t\r\x02\x02\u010D\u010E" +
		"\t\x11\x02\x02\u010E\u010F\t\v\x02\x02\u010F\u0110\t\x07\x02\x02\u0110" +
		"\u0111\t\x15\x02\x02\u0111N\x03\x02\x02\x02\u0112\u0113\t\x12\x02\x02" +
		"\u0113\u0114\t\r\x02\x02\u0114\u0115\t\x11\x02\x02\u0115\u0116\t\x11\x02" +
		"\x02\u0116\u0117\t\x05\x02\x02\u0117\u0118\t\v\x02\x02\u0118P\x03\x02" +
		"\x02\x02\u0119\u011A\t\x12\x02\x02\u011A\u011B\t\r\x02\x02\u011B\u011C" +
		"\t\x11\x02\x02\u011C\u011D\t\x0E\x02\x02\u011D\u011E\t\x12\x02\x02\u011E" +
		"\u011F\t\x15\x02\x02\u011FR\x03\x02\x02\x02\u0120\u0121\t\x12\x02\x02" +
		"\u0121\u0122\t\r\x02\x02\u0122\u0123\t\x11\x02\x02\u0123\u0124\t\x0E\x02" +
		"\x02\u0124\u0125\t\x12\x02\x02\u0125\u0126\t\x15\x02\x02\u0126\u0127\t" +
		"\x18\x02\x02\u0127T\x03\x02\x02\x02\u0128\u0129\t\x12\x02\x02\u0129\u012A" +
		"\t\r\x02\x02\u012A\u012B\t\x11\x02\x02\u012B\u012C\t\x11\x02\x02\u012C" +
		"\u012D\t\x05\x02\x02\u012D\u012E\t\x0E\x02\x02\u012EV\x03\x02\x02\x02" +
		"\u012F\u0130\t\n\x02\x02\u0130\u0131\t\x19\x02\x02\u0131\u0132\t\t\x02" +
		"\x02\u0132X\x03\x02\x02\x02\u0133\u0134\t\x10\x02\x02\u0134\u0135\t\x15" +
		"\x02\x02\u0135Z\x03\x02\x02\x02\u0136\u0137\t\n\x02\x02\u0137\u0138\t" +
		"\n\x02\x02\u0138\u0139\t\x19\x02\x02\u0139\\\x03\x02\x02\x02\u013A\u013B" +
		"\t\x10\x02\x02\u013B\u013C\t\x05\x02\x02\u013C\u013D\t\x1A\x02\x02\u013D" +
		"^\x03\x02\x02\x02\u013E\u013F\t\r\x02\x02\u013F\u0140\t\x12\x02\x02\u0140" +
		"\u0141\t\x06\x02\x02\u0141`\x03\x02\x02\x02\u0142\u0143\t\x06\x02\x02" +
		"\u0143\u0144\t\n\x02\x02\u0144\u0145\t\x1A\x02\x02\u0145b\x03\x02\x02" +
		"\x02\u0146\u0147\t\x04\x02\x02\u0147\u0148\t\x07\x02\x02\u0148\u0149\t" +
		"\x15\x02\x02\u0149d\x03\x02\x02\x02\u014A\u014B\t\x04\x02\x02\u014B\u014C" +
		"\t\x12\x02\x02\u014C\u014D\t\x19\x02\x02\u014Df\x03\x02\x02\x02\u014E" +
		"\u014F\t\x1B\x02\x02\u014F\u0150\x03\x02\x02\x02\u0150\u0151\b4\x02\x02" +
		"\u0151h\x03\x02\x02\x02\u0152\u0153\x05q9\x02\u0153\u0154\x03\x02\x02" +
		"\x02\u0154\u0155\b5\x02\x02\u0155j\x03\x02\x02\x02\u0156\u0158\x07%\x02" +
		"\x02\u0157\u0159\t\x1C\x02\x02\u0158\u0157\x03\x02\x02\x02\u0159\u015A" +
		"\x03\x02\x02\x02\u015A\u0158\x03\x02\x02\x02\u015A\u015B\x03\x02\x02\x02" +
		"\u015Bl\x03\x02\x02\x02\u015C\u015D\x07=\x02\x02\u015Dn\x03\x02\x02\x02" +
		"\u015E\u015F\v\x02\x02\x02\u015Fp\x03\x02\x02\x02\u0160\u0161\x071\x02" +
		"\x02\u0161\u0162\x07,\x02\x02\u0162\u0166\x03\x02\x02\x02\u0163\u0165" +
		"\v\x02\x02\x02\u0164\u0163\x03\x02\x02\x02\u0165\u0168\x03\x02\x02\x02" +
		"\u0166\u0167\x03\x02\x02\x02\u0166\u0164\x03\x02\x02\x02\u0167\u0169\x03" +
		"\x02\x02\x02\u0168\u0166\x03\x02\x02\x02\u0169\u016A\x07,\x02\x02\u016A" +
		"\u017C\x071\x02\x02\u016B\u016F\x07)\x02\x02\u016C\u016E\v\x02\x02\x02" +
		"\u016D\u016C\x03\x02\x02\x02\u016E\u0171\x03\x02\x02\x02\u016F\u0170\x03" +
		"\x02\x02\x02\u016F\u016D\x03\x02\x02\x02\u0170\u0172\x03\x02\x02\x02\u0171" +
		"\u016F\x03\x02\x02\x02\u0172\u017C\x07)\x02\x02\u0173\u0177\x07$\x02\x02" +
		"\u0174\u0176\v\x02\x02\x02\u0175\u0174\x03\x02\x02\x02\u0176\u0179\x03" +
		"\x02\x02\x02\u0177\u0178\x03\x02\x02\x02\u0177\u0175\x03\x02\x02\x02\u0178" +
		"\u017A\x03\x02\x02\x02\u0179\u0177\x03\x02\x02\x02\u017A\u017C\x07$\x02" +
		"\x02\u017B\u0160\x03\x02\x02\x02\u017B\u016B\x03\x02\x02\x02\u017B\u0173" +
		"\x03\x02\x02\x02\u017Cr\x03\x02\x02\x02\x0F\x02\x8C\x8E\x93\x99\xA0\xA2" +
		"\u0158\u015A\u0166\u016F\u0177\u017B\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!CalculatorLexer.__ATN) {
			CalculatorLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(CalculatorLexer._serializedATN));
		}

		return CalculatorLexer.__ATN;
	}

}

